Neste capitulo aprendemos sobre Templates.


Para ver a necessidade e a falicidade que o template nos dá vamos começar a criar o cabeçalho da nossa página. O seu conteúdo HTML
ficou assim: 

	<!DOCTYPE html>
	<html>
	<head>
	<meta charset="UTF-8">
	<title>Home Page</title>
	<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-
	EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous">
	<link href="https://fonts.googleapis.com/css2?family=Handlee&display=swap" rel="stylesheet">
	<style>
		.logo-container{
			background-color: #47bcff;
			color: #fff;
		}
		.logo{
		    font-family: 'Handlee', cursive;
		    font-size: 2.5rem;
		}
	</style>
	</head>
	<body>
		<div class="logo-container mb-3 p-4 d-flex justify-content-between">
			<span class="logo">mudi</span>
			<span class="mt-3">login</span>
		</div>
	.
	.
	.
	
Só que toda página HTML tem o mesmo cabeçalho, logo teremos que copiar esse trecho e colar em toda página HTML e isso é má prática,
pois dificulta a manutenção. A solução disso é usar Templates.

Todo conteúdo que se repete é boa pratica isolarmos e um arquivo e esse arquivo será importado nas páginas que tem o conteudo. 
Siga o passo a passo para isso:

1) Crie o arquivo base.html dentro da pasta templastes. O arquivo base.html terá o conteúdo que se repete nas páginas.
Veja seu conteudo:

<head th:fragment="head">
	<meta charset="UTF-8">
	<title>Home Page</title>
	<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-
	EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous">
	<link href="https://fonts.googleapis.com/css2?family=Handlee&display=swap" rel="stylesheet">
	<style>
		.logo-container{
			background-color: #47bcff;
			color: #fff;
		}
		.logo{
		    font-family: 'Handlee', cursive;
		    font-size: 2.5rem;
		}
	</style>
</head>



<div th:fragment="logo" class="logo-container mb-3 p-4 d-flex justify-content-between">
	<span class="logo">mudi</span>
	<span class="mt-3">login</span>
</div>



<div th:fragment="titulo(valor)" class="container-fluid bg-dark text-light p-5">
	<h1 class="display-4" th:text="${valor}"></h1>
</div>

Nesse caso temos 3 blocos que se repetem em várias páginas.

Veja que cada bloco ganha um nome para identificá-los. O atributo que faz isso é th:fragment=""

No terceito bloco usamos th:fragment="titulo(valor)", pois a página que for usar esse template terá que passar um argumento, pois o
texto muda de acordo com argumento passado!

2) Vamos importar esses templates nás páginas. Veja como ficou:

<!DOCTYPE html>
<html>
	<head th:replace="~{base :: head}"></head>
<body>
	<div th:replace="~{base :: logo}"></div>
	<div class="container">
		<div th:replace="~{base :: titulo('Meus Pedidos')}"></div>
		
Veja que para importar eu devo criar a tag necessária (head, div) e dentro dela usar o argumento: th:replace="~{base :: head}"

Dentro dos {} devo colocar o nome do arquivo (no nosso caso base) :: e o nome identificador do template (neste exemplo head, logo,
titulo).

Veja que ao chamar o base :: titulo tivemos que passar um valor como parâmetro. 
